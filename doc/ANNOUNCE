$Header$ -*-text-*-

The netCDF Operators NCO version 4.7.6 have hatched.

http://nco.sf.net (Homepage, Mailing lists, Help)
http://github.com/nco (Source Code, Issues, Releases, Developers)

What's new?
Version 4.7.6 is primarily a bugfix release for a single issue with
ncremap. Version 4.7.4 inadvertently introduced a bug that mainly
affects regridding of ALM/CLM/CTSM/ELM land model data that contains
"hidden" (unused) dimensions. The other new feature is that ncclimo
automatically handles MPAS Seaice model output named with the new
names (mpassi) and new date convention, yyyy-mm-01-00000. If these
fixes/features do not affect you there may be no reason to upgrade,
yet see below for other minor new features you may want.

Work on NCO 4.8.0 has commenced "under the hood". Printing of netCDF4
user-defined types ENUM and VLEN is ready now (though unsupported)
with the --udt flag. 4.8.0 will contain the finished version of that,
progress on parallel weight generation by ncremap, and possibly a
workaround for using quotation marks with ncap2 in Windows.  

Enjoy,
Charlie

NEW FEATURES (full details always in ChangeLog):

A. ncclimo accepts mpassi in place of mpascice, mpasseaice, and
   accepts new MPAS output filenames of form yyyy-mm-01-00000
   ncclimo -s 2 -e 3 -m mpassi -i drc_in -o drc_out
   http://nco.sf.net/nco.html#ncclimo

B. ncap2 allows optional scale_factor/add_offset arguments to its
   pack() method for those who wish to specify their own packing
   parameters. This override can ensure that multiple files use the
   same packing parameters.  
   ncap2 -s 'var_pck=pack(var,-0.001,40.0)' in.nc out.nc
   http://nco.sf.net/nco.html#ncap2_mth

C. NCO's security whitelist allows an extended character set when the 
   input file explicitly invokes the DAP4 protocol (e.g.,
   dap4://foo.com/in.nc). This allows DAP4 input to utilize the full
   set of constraint expressions.
   http://nco.sf.net/nco.html#wht_lst

D. XML printing now includes the "ncml:" prefix on most tags.
   This aligns NCO XML with XML produced by toolsUI version 4.6.11,
   the latest (AFAICT) netCDF Java library. If this change bothers
   you or breaks your XML workflow, let us know and we can make it
   optional.
   http://nco.sf.net/nco.html#xml

E. Repeated notice: netCDF 4.6.1 fixes the CDF5 bug. Yay!
   We STRONGLY recommend that CDF5 users upgrade to netCDF 4.6.1.
   NCO error messages and HINTs have been updated to better describe
   the best practices to identify and avoid this nasty bug.
   http://nco.sf.net#bug_cdf5

BUG FIXES:

A. ncremap fixes the algorithm that identifies unstructured dimensions
   to now check that size of candidates matches the size expected by
   the mapping file. Failures then fall-back to PJCS mechanism of
   searching for dimension with expected size. This fixes a bug
   introduced in 4.7.4 where "hidden" (unused) dimensions can
   supercede "visible" dimensions and crash the regridder.
   Thanks to Sterling Baldwin for reporting this issue.

Full release statement at http://nco.sf.net/ANNOUNCE

KNOWN PROBLEMS DUE TO NCO:

   This section of ANNOUNCE reports and reminds users of the
   existence and severity of known, not yet fixed, problems. 
   These problems occur with NCO 4.7.6 built/tested under
   MacOS 10.13.4 with netCDF 4.4.1.1 on HDF5 1.10.2 and with
   Linux with netCDF 4.6.2-development (20180515) on HDF5 1.8.19.

A. NOT YET FIXED (NCO problem)
   Correctly read arrays of NC_STRING with embedded delimiters in ncatted arguments

   Demonstration:
   ncatted -D 5 -O -a new_string_att,att_var,c,sng,"list","of","str,ings" ~/nco/data/in_4.nc ~/foo.nc
   ncks -m -C -v att_var ~/foo.nc

   20130724: Verified problem still exists
   TODO nco1102
   Cause: NCO parsing of ncatted arguments is not sophisticated
   enough to handle arrays of NC_STRINGS with embedded delimiters.

B. NOT YET FIXED (NCO problem?)
   ncra/ncrcat (not ncks) hyperslabbing can fail on variables with multiple record dimensions

   Demonstration:
   ncrcat -O -d time,0 ~/nco/data/mrd.nc ~/foo.nc

   20140826: Verified problem still exists
   20140619: Problem reported by rmla
   Cause: Unsure. Maybe ncra.c loop structure not amenable to MRD?
   Workaround: Convert to fixed dimensions then hyperslab

KNOWN PROBLEMS DUE TO BASE LIBRARIES/PROTOCOLS:

A. NOT YET FIXED (netCDF4 or HDF5 problem?)
   Specifying strided hyperslab on large netCDF4 datasets leads
   to slowdown or failure with recent netCDF versions.

   Demonstration with NCO <= 4.4.5:
   time ncks -O -d time,0,,12 ~/ET_2000-01_2001-12.nc ~/foo.nc
   Demonstration with NCL:
   time ncl < ~/nco/data/ncl.ncl   
   20140718: Problem reported by Parker Norton
   20140826: Verified problem still exists
   20140930: Finish NCO workaround for problem
   Cause: Slow algorithm in nc_var_gets()?
   Workaround #1: Use NCO 4.4.6 or later (avoids nc_var_gets())
   Workaround #2: Convert file to netCDF3 first, then use stride

B. NOT YET FIXED (netCDF4 library bug)
   Simultaneously renaming multiple dimensions in netCDF4 file can corrupt output

   Demonstration:
   ncrename -O -d lev,z -d lat,y -d lon,x ~/nco/data/in_grp.nc ~/foo.nc # Completes but file is unreadable
   ncks -v one ~/foo.nc

   20150922: Confirmed problem reported by Isabelle Dast, reported to Unidata
   20150924: Unidata confirmed problem
   20160212: Verified problem still exists in netCDF library
   20160512: Ditto
   20161028: Verified problem still exists with netCDF 4.4.1
   20170323: Verified problem still exists with netCDF 4.4.2-development
   20170323: https://github.com/Unidata/netcdf-c/issues/381
   20171102: Verified problem still exists with netCDF 4.5.1-development
   20171107: https://github.com/Unidata/netcdf-c/issues/597
   Bug tracking: https://www.unidata.ucar.edu/jira/browse/fxm
   More details: http://nco.sf.net/nco.html#ncrename_crd

C. NOT YET FIXED (would require DAP protocol change?)
   Unable to retrieve contents of variables including period '.' in name
   Periods are legal characters in netCDF variable names.
   Metadata are returned successfully, data are not.
   DAP non-transparency: Works locally, fails through DAP server.

   Demonstration:
   ncks -O -C -D 3 -v var_nm.dot -p http://thredds-test.ucar.edu/thredds/dodsC/testdods in.nc # Fails to find variable

   20130724: Verified problem still exists. 
   Stopped testing because inclusion of var_nm.dot broke all test scripts.
   NB: Hard to fix since DAP interprets '.' as structure delimiter in HTTP query string.

   Bug tracking: https://www.unidata.ucar.edu/jira/browse/NCF-47

D. NOT YET FIXED (would require DAP protocol change)
   Correctly read scalar characters over DAP.
   DAP non-transparency: Works locally, fails through DAP server.
   Problem, IMHO, is with DAP definition/protocol

   Demonstration:
   ncks -O -D 1 -H -C -m --md5_dgs -v md5_a -p http://thredds-test.ucar.edu/thredds/dodsC/testdods in.nc

   20120801: Verified problem still exists
   Bug report not filed
   Cause: DAP translates scalar characters into 64-element (this
   dimension is user-configurable, but still...), NUL-terminated
   strings so MD5 agreement fails 

"Sticky" reminders:

A. Reminder that NCO works on most HDF4 and HDF5 datasets, e.g., 
   HDF4: AMSR MERRA MODIS ...
   HDF5: GLAS ICESat Mabel SBUV ...
   HDF-EOS5: AURA HIRDLS OMI ...

B. Pre-built executables for many OS's at:
   http://nco.sf.net#bnr


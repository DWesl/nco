$Header$ -*-text-*-

The netCDF Operators NCO version 4.7.6 have hatched.

http://nco.sf.net (Homepage, Mailing lists, Help)
http://github.com/nco (Source Code, Issues, Releases, Developers)

What's new?
Version 4.7.6 is primarily a feature release for ncremap.
There are two new processing modes, one for regridding regional data,
and one for generating all mapfile permutations with all interpolation 
algorithms. There is also improved support for auxiliary coordinates
that lack coordinaes/standard_name conventions, improved ncap2
command-line script handling in Windows, and less intrusive HPSS file
system support. 

Work on NCO 5.0.0 has commenced "under the hood". The key leap in that
release will be support for netCDF4 user-defined types. Printing of
netCDF4 user-defined types ENUM and VLEN is ready now (though
unsupported) with the --udt flag. 5.0.0 will contain the finished
version of that, and progress on weight generation by ncremap. 

Enjoy,
Charlie

NEW FEATURES (full details always in ChangeLog):

A. NCO versions 4.6.6+ (April, 2017) has looked for files on an HPSS
   filesystem when it could not find them elsewhere. This produces
   messages considered intrusive by many users, who do not have HPSS.
   Now users must opt-in to HPSS searches by adding the --hpss flag:
   ncks -l . --hpss /home/zender/nco/in.nc
   http://nco.sf.net#hpss

A. ncremap now regrids regional output produced by CESM CAM-SE and
   E3SM EAM models. Models output these RRG (for "regional
   regridding" format) files if requested by the finclNlonlat
   namelist parameter. RRG files from FV-dycore simulations were
   already regriddable, and now SE-dycore RRG files are too:
   ncremap --dat_glb=dat_glb.nc --grd_glb=grd_glb.nc -g grd_rgn.nc dat_rgn.nc dat_rgr.nc
   Documentation is currently available to E3SM users at
   https://acme-climate.atlassian.net/wiki/spaces/SIM/pages/754286611/Regridding+E3SM+Data+with+ncremap
   and to others via email request (it will be in Users Guide soon).

A. ncremap includes an MWF-mode (for "Make All Weight Files") that
   generates and names, with one command and in a self-consistent
   manner, all combinations of E3SM global atmosphere<->ocean maps
   with both ERWG and Tempest. MWF-mode automates the laborious and
   error-prone process of generating numerous map-files with various
   switches. Its chief use occurs when developing and testing new
   global grid-pairs for the E3SM atmosphere and ocean components:   
   ncremap -P mwf -s grd_ocn -g grd_atm --nm_src=ocn_nm --nm_dst=atm_nm --dt_sng=date
   Documentation is currently available to E3SM users at
   https://acme-climate.atlassian.net/wiki/spaces/SIM/pages/754286611/Regridding+E3SM+Data+with+ncremap
   and to others via email request (it will be in Users Guide soon).

A. ncap2 string-handling is now more compatible between Windows and
   better OSs. Previously, some ncap2 scripts could behave differently
   due to the Windows definition of the C++ c_str() function.

BUG FIXES:

A. NCO completes when chunking into non-netCDF4 files (of course it
   ignores the chunking request). Previous NCO tried to complete but
   dumped-core. 

A. NCO now only prints one WARNING about user-specified chunk size for  
   record dimension being too big.

A. Repeated notice: netCDF 4.6.1 fixes the CDF5 bug described here
   http://nco.sf.net#bug_cdf5
   We STRONGLY recommend that CDF5 users upgrade to netCDF 4.6.1.
   NCO error messages and HINTs have been updated to better describe
   the best practices to identify and avoid this nasty bug.

Full release statement at http://nco.sf.net/ANNOUNCE

KNOWN PROBLEMS DUE TO NCO:

   This section of ANNOUNCE reports and reminds users of the
   existence and severity of known, not yet fixed, problems. 
   These problems occur with NCO 4.7.6 built/tested under
   MacOS 10.13.6 with netCDF 4.4.1.1 on HDF5 1.10.2 and with
   Linux with netCDF 4.6.2-development (20180515) on HDF5 1.8.19.

A. NOT YET FIXED (NCO problem)
   Correctly read arrays of NC_STRING with embedded delimiters in ncatted arguments

   Demonstration:
   ncatted -D 5 -O -a new_string_att,att_var,c,sng,"list","of","str,ings" ~/nco/data/in_4.nc ~/foo.nc
   ncks -m -C -v att_var ~/foo.nc

   20130724: Verified problem still exists
   TODO nco1102
   Cause: NCO parsing of ncatted arguments is not sophisticated
   enough to handle arrays of NC_STRINGS with embedded delimiters.

B. NOT YET FIXED (NCO problem?)
   ncra/ncrcat (not ncks) hyperslabbing can fail on variables with multiple record dimensions

   Demonstration:
   ncrcat -O -d time,0 ~/nco/data/mrd.nc ~/foo.nc

   20140826: Verified problem still exists
   20140619: Problem reported by rmla
   Cause: Unsure. Maybe ncra.c loop structure not amenable to MRD?
   Workaround: Convert to fixed dimensions then hyperslab

KNOWN PROBLEMS DUE TO BASE LIBRARIES/PROTOCOLS:

A. NOT YET FIXED (netCDF4 or HDF5 problem?)
   Specifying strided hyperslab on large netCDF4 datasets leads
   to slowdown or failure with recent netCDF versions.

   Demonstration with NCO <= 4.4.5:
   time ncks -O -d time,0,,12 ~/ET_2000-01_2001-12.nc ~/foo.nc
   Demonstration with NCL:
   time ncl < ~/nco/data/ncl.ncl   
   20140718: Problem reported by Parker Norton
   20140826: Verified problem still exists
   20140930: Finish NCO workaround for problem
   Cause: Slow algorithm in nc_var_gets()?
   Workaround #1: Use NCO 4.4.6 or later (avoids nc_var_gets())
   Workaround #2: Convert file to netCDF3 first, then use stride

B. NOT YET FIXED (netCDF4 library bug)
   Simultaneously renaming multiple dimensions in netCDF4 file can corrupt output

   Demonstration:
   ncrename -O -d lev,z -d lat,y -d lon,x ~/nco/data/in_grp.nc ~/foo.nc # Completes but file is unreadable
   ncks -v one ~/foo.nc

   20150922: Confirmed problem reported by Isabelle Dast, reported to Unidata
   20150924: Unidata confirmed problem
   20160212: Verified problem still exists in netCDF library
   20160512: Ditto
   20161028: Verified problem still exists with netCDF 4.4.1
   20170323: Verified problem still exists with netCDF 4.4.2-development
   20170323: https://github.com/Unidata/netcdf-c/issues/381
   20171102: Verified problem still exists with netCDF 4.5.1-development
   20171107: https://github.com/Unidata/netcdf-c/issues/597
   Bug tracking: https://www.unidata.ucar.edu/jira/browse/fxm
   More details: http://nco.sf.net/nco.html#ncrename_crd

C. NOT YET FIXED (would require DAP protocol change?)
   Unable to retrieve contents of variables including period '.' in name
   Periods are legal characters in netCDF variable names.
   Metadata are returned successfully, data are not.
   DAP non-transparency: Works locally, fails through DAP server.

   Demonstration:
   ncks -O -C -D 3 -v var_nm.dot -p http://thredds-test.ucar.edu/thredds/dodsC/testdods in.nc # Fails to find variable

   20130724: Verified problem still exists. 
   Stopped testing because inclusion of var_nm.dot broke all test scripts.
   NB: Hard to fix since DAP interprets '.' as structure delimiter in HTTP query string.

   Bug tracking: https://www.unidata.ucar.edu/jira/browse/NCF-47

D. NOT YET FIXED (would require DAP protocol change)
   Correctly read scalar characters over DAP.
   DAP non-transparency: Works locally, fails through DAP server.
   Problem, IMHO, is with DAP definition/protocol

   Demonstration:
   ncks -O -D 1 -H -C -m --md5_dgs -v md5_a -p http://thredds-test.ucar.edu/thredds/dodsC/testdods in.nc

   20120801: Verified problem still exists
   Bug report not filed
   Cause: DAP translates scalar characters into 64-element (this
   dimension is user-configurable, but still...), NUL-terminated
   strings so MD5 agreement fails 

"Sticky" reminders:

A. Reminder that NCO works on most HDF4 and HDF5 datasets, e.g., 
   HDF4: AMSR MERRA MODIS ...
   HDF5: GLAS ICESat Mabel SBUV ...
   HDF-EOS5: AURA HIRDLS OMI ...

B. Pre-built executables for many OS's at:
   http://nco.sf.net#bnr

